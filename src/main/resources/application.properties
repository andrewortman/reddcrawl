http.port=${HTTP_PORT:8085}

#runs on postgres with hibernate (will probably switch to jdbc later, though)
db.driver=org.postgresql.Driver
db.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:reddcrawl}
db.username=${DB_USERNAME:postgres}
db.password=${DB_PASSWORD:postgres}
db.initialSize=${DB_POOL_INITIAL_SIZE:12}
db.maxSize=${DB_POOL_MAX_SIZE:32}
db.minIdle=${DB_POOL_MIN_IDLE:12}

db.hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect
db.hibernate.hbm2ddl.auto=none

#client configuration
client.endpoint=https://oauth.reddit.com
client.useragent=${REDDCRAWL_USERAGENT:script:reddcrawl:v0.2 (by /u/reddcrawl)}
client.timeout.connect=${REDDCRAWL_CLIENT_CONNECT_TIMEOUT:5000}
client.timeout.read=${REDDCRAWL_CLIENT_READ_TIMEOUT:10000}
client.rpm=${REDDCRAWL_REQ_PER_MINUTE:60}

#client oauth authentication (required)
client.oauth.endpoint=https://www.reddit.com
client.oauth.username=${REDDCRAWL_USERNAME}
client.oauth.password=${REDDCRAWL_PASSWORD}
client.oauth.clientid=${REDDCRAWL_CLIENTID}
client.oauth.clientsecret=${REDDCRAWL_SECRET}

#where to write the gzip'd archives to disk
service.archive.directory=${REDDCRAWL_SERVICE_ARCHIVE_DIRECTORY:/tmp}
service.archive.oldeststory=${REDDCRAWL_SERVICE_ARCHIVE_OLDEST_STORY_AGE:172800}
service.archive.batchinterval=${REDDCRAWL_SERVICE_BATCH_INTERVAL:5}

service.newstoryscraper.newstorycount=${REDDCRAWL_STORYSCAVENGER_COUNT:400}
service.newstoryscraper.hotstorycount=${REDDCRAWL_STORYSCAVENGER_COUNT:400}
service.newstoryscraper.subredditexpirationinterval=${REDDCRAWL_STORYSCAVENGER_SUBREDDITEXPIRATIONINTERVAL:10800}
service.newstoryscraper.interval=${REDDCRAWL_STORYSCAVENGER_INTERVAL:60}

#oldest age of any story being tracked
service.storyhistoryupdater.oldeststory=${REDDCRAWL_STORYHISTORYUPDATER_OLDEST_STORY_AGE:172800}
service.storyhistoryupdater.interval=${REDDCRAWL_STORYHISTORYUPDATER_INTERVAL:120}
service.storyhistoryupdater.workers=${REDDCRAWL_STORYHISTORYUPDATER_WORKERS:4}

service.subreddithistoryupdater.interval=${REDDCRAWL_SUBREDDITHISTORYUPDATER_INTERVAL:1800}

#datadog support
metrics.datadog.apikey=${DATADOG_APIKEY:}
metrics.datadog.interval=${DATADOG_INTERVAL:10}

#signalfx support
metrics.signalfx.apikey=${SIGNALFX_APIKEY:}
metrics.signalfx.interval=${SIGNALFX_INTERVAL:5}
